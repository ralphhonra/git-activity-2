
---- [[ subiquity step initial ]] ----
curtin: Installation started. (24.0.0-100-gaa2f5dd03)
curtin: Installation finished.

---- [[ subiquity step partitioning ]] ----
curtin: Installation started. (24.0.0-100-gaa2f5dd03)
start: cmd-install/stage-partitioning/builtin/cmd-block-meta: curtin command block-meta
get_path_to_storage_volume for volume disk-sda({'ptable': 'gpt', 'path': '/dev/sda', 'wipe': 'superblock-recursive', 'preserve': False, 'name': '', 'grub_device': False, 'id': 'disk-sda', 'type': 'disk'})
Running command ['udevadm', 'info', '--query=property', '--export', '/dev/sda'] with allowed return codes [0] (capture=True)
/dev/sda is multipath device member? False
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.107
devsync happy - path /dev/sda now exists
return volume path /dev/sda
get_path_to_storage_volume for volume partition-0({'device': 'disk-sda', 'size': 1127219200, 'wipe': 'superblock', 'flag': 'boot', 'number': 1, 'preserve': False, 'grub_device': True, 'offset': 1048576, 'id': 'partition-0', 'type': 'partition'})
get_path_to_storage_volume for volume disk-sda({'ptable': 'gpt', 'path': '/dev/sda', 'wipe': 'superblock-recursive', 'preserve': False, 'name': '', 'grub_device': False, 'id': 'disk-sda', 'type': 'disk'})
Running command ['udevadm', 'info', '--query=property', '--export', '/dev/sda'] with allowed return codes [0] (capture=True)
/dev/sda is multipath device member? False
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.105
devsync happy - path /dev/sda now exists
return volume path /dev/sda
get_path_to_storage_volume for volume partition-1({'device': 'disk-sda', 'size': 106244866048, 'wipe': 'superblock', 'number': 2, 'preserve': False, 'offset': 1128267776, 'id': 'partition-1', 'type': 'partition'})
get_path_to_storage_volume for volume disk-sda({'ptable': 'gpt', 'path': '/dev/sda', 'wipe': 'superblock-recursive', 'preserve': False, 'name': '', 'grub_device': False, 'id': 'disk-sda', 'type': 'disk'})
Running command ['udevadm', 'info', '--query=property', '--export', '/dev/sda'] with allowed return codes [0] (capture=True)
/dev/sda is multipath device member? False
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.094
devsync happy - path /dev/sda now exists
return volume path /dev/sda
block-meta: extracted devices to clear: ['/dev/sda']
Declared block devices: ['/dev/sda']
clearing devices=['/dev/sda']
start: cmd-install/stage-partitioning/builtin/cmd-block-meta/clear-holders: removing previous storage devices
Running command ['mdadm', '--assemble', '--scan', '-v'] with allowed return codes [0, 1, 2] (capture=True)
mdadm assemble scan results:

mdadm: looking for devices for further assembly
mdadm: no recogniseable superblock on /dev/loop16
mdadm: no recogniseable superblock on /dev/loop15
mdadm: no recogniseable superblock on /dev/loop12
mdadm: no recogniseable superblock on /dev/loop14
mdadm: no recogniseable superblock on /dev/loop13
mdadm: no recogniseable superblock on /dev/loop10
mdadm: no recogniseable superblock on /dev/loop11
mdadm: no recogniseable superblock on /dev/loop9
mdadm: no recogniseable superblock on /dev/loop8
mdadm: no recogniseable superblock on /dev/sda
mdadm: no recogniseable superblock on /dev/sr0
mdadm: no recogniseable superblock on /dev/loop7
mdadm: no recogniseable superblock on /dev/loop6
mdadm: no recogniseable superblock on /dev/loop5
mdadm: no recogniseable superblock on /dev/loop4
mdadm: no recogniseable superblock on /dev/loop3
mdadm: no recogniseable superblock on /dev/loop2
mdadm: no recogniseable superblock on /dev/loop1
mdadm: no recogniseable superblock on /dev/loop0
mdadm: No arrays found in config file or automatically

Running command ['mdadm', '--detail', '--scan', '-v'] with allowed return codes [0, 1] (capture=True)
mdadm detail scan after assemble:


Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.005
Running command ['pvscan'] with allowed return codes [0] (capture=True)
Running command ['vgscan'] with allowed return codes [0] (capture=True)
Running command ['vgchange', '--activate=y'] with allowed return codes [0] (capture=True)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.006
Loading kernel module bcache via modprobe
Running command ['modprobe', '--use-blacklist', 'bcache'] with allowed return codes [0] (capture=False)
Generating device storage trees for path(s): ['/dev/sda']
devname '/sys/class/block/sda' had holders: []
/dev/sda is multipath device partition? False
/dev/sda is multipath device partition? False
/dev/sda is multipath device partition? False
Current device storage tree:
sda
Shutdown Plan:
{'level': 0, 'device': '/sys/class/block/sda', 'dev_type': 'disk'}
shutdown running on holder type: 'disk' syspath: '/sys/class/block/sda'
Running command ['lsblk', '--noheadings', '--bytes', '--pairs', '--output=ALIGNMENT,DISC-ALN,DISC-GRAN,DISC-MAX,DISC-ZERO,FSTYPE,GROUP,KNAME,LABEL,LOG-SEC,MAJ:MIN,MIN-IO,MODE,MODEL,MOUNTPOINT,NAME,OPT-IO,OWNER,PHY-SEC,RM,RO,ROTA,RQ-SIZE,SIZE,STATE,TYPE,UUID', '/dev/sda'] with allowed return codes [0] (capture=True)
get_blockdev_sector_size: info:
{
 "sda": {
  "ALIGNMENT": "0",
  "DISC-ALN": "0",
  "DISC-GRAN": "512",
  "DISC-MAX": "0",
  "DISC-ZERO": "0",
  "FSTYPE": "",
  "GROUP": "disk",
  "KNAME": "sda",
  "LABEL": "",
  "LOG-SEC": "512",
  "MAJ:MIN": "8:0",
  "MIN-IO": "512",
  "MODE": "brw-rw----",
  "MODEL": "HARDDISK",
  "MOUNTPOINT": "",
  "NAME": "sda",
  "OPT-IO": "0",
  "OWNER": "root",
  "PHY-SEC": "512",
  "RM": "0",
  "RO": "0",
  "ROTA": "1",
  "RQ-SIZE": "1024",
  "SIZE": "107374182400",
  "STATE": "running",
  "TYPE": "disk",
  "UUID": "",
  "device_path": "/dev/sda"
 }
}
get_blockdev_sector_size: (log=512, phys=512)
Running command ['fdasd', '--table', '/dev/sda'] with allowed return codes [0] (capture=False)
Running command ['lsblk', '--noheadings', '--bytes', '--pairs', '--output=ALIGNMENT,DISC-ALN,DISC-GRAN,DISC-MAX,DISC-ZERO,FSTYPE,GROUP,KNAME,LABEL,LOG-SEC,MAJ:MIN,MIN-IO,MODE,MODEL,MOUNTPOINT,NAME,OPT-IO,OWNER,PHY-SEC,RM,RO,ROTA,RQ-SIZE,SIZE,STATE,TYPE,UUID'] with allowed return codes [0] (capture=True)
Checking if /dev/sda is a swap device
Found swap magic: b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
wiping superblock on /dev/sda
wiping /dev/sda attempt 1/4
Running command ['wipefs', '--all', '--force', '/dev/sda'] with allowed return codes [0] (capture=False)
wiping 1M on /dev/sda at offsets [0, -1048576]
successfully wiped device /dev/sda on attempt 1/4
devname '/sys/class/block/sda' had holders: []
/dev/sda is multipath device partition? False
/dev/sda is multipath device partition? False
/dev/sda is multipath device partition? False
finish: cmd-install/stage-partitioning/builtin/cmd-block-meta/clear-holders: SUCCESS: removing previous storage devices
blockmeta: detected storage config, using mode=custom
start: cmd-install/stage-partitioning/builtin/cmd-block-meta: configuring disk: disk-sda
get_path_to_storage_volume for volume disk-sda({'ptable': 'gpt', 'path': '/dev/sda', 'wipe': 'superblock-recursive', 'preserve': False, 'name': '', 'grub_device': False, 'id': 'disk-sda', 'type': 'disk'})
/dev/sda is multipath device member? False
found candidate disks [{'/dev/sda'}]
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.104
devsync happy - path /dev/sda now exists
return volume path /dev/sda
Acquiring fcntl LOCK_EX on /dev/sda
Running command ['wipefs', '--all', '--force', '/dev/sda'] with allowed return codes [0] (capture=False)
wiping 1M on /dev/sda at offsets [0, -1048576]
labeling device: '/dev/sda' with 'gpt' partition table
Running command ['wipefs', '--all', '--force', '/dev/sda'] with allowed return codes [0] (capture=False)
wiping 1M on /dev/sda at offsets [0, -1048576]
devname '/dev/sda' had holders: []
Releasing fcntl LOCK_EX on /dev/sda
get_path_to_storage_volume for volume disk-sda({'ptable': 'gpt', 'path': '/dev/sda', 'wipe': 'superblock-recursive', 'preserve': False, 'name': '', 'grub_device': False, 'id': 'disk-sda', 'type': 'disk'})
/dev/sda is multipath device member? False
found candidate disks [{'/dev/sda'}]
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.104
devsync happy - path /dev/sda now exists
return volume path /dev/sda
Running command ['lsblk', '--noheadings', '--bytes', '--pairs', '--output=ALIGNMENT,DISC-ALN,DISC-GRAN,DISC-MAX,DISC-ZERO,FSTYPE,GROUP,KNAME,LABEL,LOG-SEC,MAJ:MIN,MIN-IO,MODE,MODEL,MOUNTPOINT,NAME,OPT-IO,OWNER,PHY-SEC,RM,RO,ROTA,RQ-SIZE,SIZE,STATE,TYPE,UUID', '/dev/sda'] with allowed return codes [0] (capture=True)
get_blockdev_sector_size: info:
{
 "sda": {
  "ALIGNMENT": "0",
  "DISC-ALN": "0",
  "DISC-GRAN": "512",
  "DISC-MAX": "0",
  "DISC-ZERO": "0",
  "FSTYPE": "",
  "GROUP": "disk",
  "KNAME": "sda",
  "LABEL": "",
  "LOG-SEC": "512",
  "MAJ:MIN": "8:0",
  "MIN-IO": "512",
  "MODE": "brw-rw----",
  "MODEL": "HARDDISK",
  "MOUNTPOINT": "",
  "NAME": "sda",
  "OPT-IO": "0",
  "OWNER": "root",
  "PHY-SEC": "512",
  "RM": "0",
  "RO": "0",
  "ROTA": "1",
  "RQ-SIZE": "1024",
  "SIZE": "107374182400",
  "STATE": "running",
  "TYPE": "disk",
  "UUID": "",
  "device_path": "/dev/sda"
 }
}
get_blockdev_sector_size: (log=512, phys=512)
sfdisk input:
---
label: gpt

1:  start=2048 size=2201600 type=C12A7328-F81F-11D2-BA4B-00A0C93EC93B
2:  start=2203648 size=207509504
---

Running command ['losetup', '--version'] with allowed return codes [0] (capture=True)
Running command ['sfdisk', '--no-reread', '/dev/sda', '--no-tell-kernel'] with allowed return codes [0] (capture=False)
Disk /dev/sda: 100 GiB, 107374182400 bytes, 209715200 sectors
Disk model: HARDDISK        
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes

>>> Script header accepted.
>>> Created a new GPT disklabel (GUID: 98EA1692-ED03-4413-ABCF-CF50970439F6).
/dev/sda1: Created a new partition 1 of type 'EFI System' and of size 1 GiB.
/dev/sda2: Created a new partition 2 of type 'Linux filesystem' and of size 98.9 GiB.
/dev/sda3: Done.

New situation:
Disklabel type: gpt
Disk identifier: 98EA1692-ED03-4413-ABCF-CF50970439F6

Device       Start       End   Sectors  Size Type
/dev/sda1     2048   2203647   2201600    1G EFI System
/dev/sda2  2203648 209713151 207509504 98.9G Linux filesystem

The partition table has been altered.
Running command ['partprobe', '/dev/sda'] with allowed return codes [0] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.150
Running command ['wipefs', '--all', '--force', '/dev/sda2'] with allowed return codes [0] (capture=False)
wiping 1M on /dev/sda2 at offsets [0, -1048576]
Running command ['wipefs', '--all', '--force', '/dev/sda1'] with allowed return codes [0] (capture=False)
wiping 1M on /dev/sda1 at offsets [0, -1048576]
get_path_to_storage_volume for volume partition-0({'device': 'disk-sda', 'size': 1127219200, 'wipe': 'superblock', 'flag': 'boot', 'number': 1, 'preserve': False, 'grub_device': True, 'offset': 1048576, 'id': 'partition-0', 'type': 'partition'})
get_path_to_storage_volume for volume disk-sda({'ptable': 'gpt', 'path': '/dev/sda', 'wipe': 'superblock-recursive', 'preserve': False, 'name': '', 'grub_device': False, 'id': 'disk-sda', 'type': 'disk'})
/dev/sda is multipath device member? False
found candidate disks [{'/dev/sda'}]
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.157
devsync happy - path /dev/sda now exists
return volume path /dev/sda
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.153
devsync happy - path /dev/sda now exists
return volume path /dev/sda1
Running command ['blkid', '-o', 'export', '/dev/sda1'] with allowed return codes [0, 2] (capture=True)
No partition-specific dname
get_path_to_storage_volume for volume partition-1({'device': 'disk-sda', 'size': 106244866048, 'wipe': 'superblock', 'number': 2, 'preserve': False, 'offset': 1128267776, 'id': 'partition-1', 'type': 'partition'})
get_path_to_storage_volume for volume disk-sda({'ptable': 'gpt', 'path': '/dev/sda', 'wipe': 'superblock-recursive', 'preserve': False, 'name': '', 'grub_device': False, 'id': 'disk-sda', 'type': 'disk'})
/dev/sda is multipath device member? False
found candidate disks [{'/dev/sda'}]
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.147
devsync happy - path /dev/sda now exists
return volume path /dev/sda
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.146
devsync happy - path /dev/sda now exists
return volume path /dev/sda2
Running command ['blkid', '-o', 'export', '/dev/sda2'] with allowed return codes [0, 2] (capture=True)
No partition-specific dname
finish: cmd-install/stage-partitioning/builtin/cmd-block-meta: SUCCESS: configuring disk: disk-sda
start: cmd-install/stage-partitioning/builtin/cmd-block-meta: configuring partition: partition-0
get_path_to_storage_volume for volume partition-0({'device': 'disk-sda', 'size': 1127219200, 'wipe': 'superblock', 'flag': 'boot', 'number': 1, 'preserve': False, 'grub_device': True, 'offset': 1048576, 'id': 'partition-0', 'type': 'partition'})
get_path_to_storage_volume for volume disk-sda({'ptable': 'gpt', 'path': '/dev/sda', 'wipe': 'superblock-recursive', 'preserve': False, 'name': '', 'grub_device': False, 'id': 'disk-sda', 'type': 'disk'})
/dev/sda is multipath device member? False
found candidate disks [{'/dev/sda'}]
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.140
devsync happy - path /dev/sda now exists
return volume path /dev/sda
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.151
devsync happy - path /dev/sda now exists
return volume path /dev/sda1
finish: cmd-install/stage-partitioning/builtin/cmd-block-meta: SUCCESS: configuring partition: partition-0
start: cmd-install/stage-partitioning/builtin/cmd-block-meta: configuring format: format-0
get_path_to_storage_volume for volume partition-0({'device': 'disk-sda', 'size': 1127219200, 'wipe': 'superblock', 'flag': 'boot', 'number': 1, 'preserve': False, 'grub_device': True, 'offset': 1048576, 'id': 'partition-0', 'type': 'partition'})
get_path_to_storage_volume for volume disk-sda({'ptable': 'gpt', 'path': '/dev/sda', 'wipe': 'superblock-recursive', 'preserve': False, 'name': '', 'grub_device': False, 'id': 'disk-sda', 'type': 'disk'})
/dev/sda is multipath device member? False
found candidate disks [{'/dev/sda'}]
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.160
devsync happy - path /dev/sda now exists
return volume path /dev/sda
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.148
devsync happy - path /dev/sda now exists
return volume path /dev/sda1
mkfs /dev/sda1 info: {'fstype': 'fat32', 'volume': 'partition-0', 'preserve': False, 'id': 'format-0', 'type': 'format'}
Running command ['lsblk', '--noheadings', '--bytes', '--pairs', '--output=ALIGNMENT,DISC-ALN,DISC-GRAN,DISC-MAX,DISC-ZERO,FSTYPE,GROUP,KNAME,LABEL,LOG-SEC,MAJ:MIN,MIN-IO,MODE,MODEL,MOUNTPOINT,NAME,OPT-IO,OWNER,PHY-SEC,RM,RO,ROTA,RQ-SIZE,SIZE,STATE,TYPE,UUID', '/dev/sda1'] with allowed return codes [0] (capture=True)
get_blockdev_sector_size: info:
{
 "sda1": {
  "ALIGNMENT": "0",
  "DISC-ALN": "0",
  "DISC-GRAN": "512",
  "DISC-MAX": "0",
  "DISC-ZERO": "0",
  "FSTYPE": "",
  "GROUP": "disk",
  "KNAME": "sda1",
  "LABEL": "",
  "LOG-SEC": "512",
  "MAJ:MIN": "8:1",
  "MIN-IO": "512",
  "MODE": "brw-rw----",
  "MODEL": "",
  "MOUNTPOINT": "",
  "NAME": "sda1",
  "OPT-IO": "0",
  "OWNER": "root",
  "PHY-SEC": "512",
  "RM": "0",
  "RO": "0",
  "ROTA": "1",
  "RQ-SIZE": "1024",
  "SIZE": "1127219200",
  "STATE": "",
  "TYPE": "part",
  "UUID": "",
  "device_path": "/dev/sda1"
 }
}
get_blockdev_sector_size: (log=512, phys=512)
Running command ['mkfs.vfat', '-I', '-F', '32', '/dev/sda1'] with allowed return codes [0] (capture=True)
Running command ['blkid', '-o', 'full'] with allowed return codes [0] (capture=True)
Formated device type: partition
finish: cmd-install/stage-partitioning/builtin/cmd-block-meta: SUCCESS: configuring format: format-0
start: cmd-install/stage-partitioning/builtin/cmd-block-meta: configuring partition: partition-1
get_path_to_storage_volume for volume partition-1({'device': 'disk-sda', 'size': 106244866048, 'wipe': 'superblock', 'number': 2, 'preserve': False, 'offset': 1128267776, 'id': 'partition-1', 'type': 'partition'})
get_path_to_storage_volume for volume disk-sda({'ptable': 'gpt', 'path': '/dev/sda', 'wipe': 'superblock-recursive', 'preserve': False, 'name': '', 'grub_device': False, 'id': 'disk-sda', 'type': 'disk'})
/dev/sda is multipath device member? False
found candidate disks [{'/dev/sda'}]
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.153
devsync happy - path /dev/sda now exists
return volume path /dev/sda
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.152
devsync happy - path /dev/sda now exists
return volume path /dev/sda2
finish: cmd-install/stage-partitioning/builtin/cmd-block-meta: SUCCESS: configuring partition: partition-1
start: cmd-install/stage-partitioning/builtin/cmd-block-meta: configuring format: format-1
get_path_to_storage_volume for volume partition-1({'device': 'disk-sda', 'size': 106244866048, 'wipe': 'superblock', 'number': 2, 'preserve': False, 'offset': 1128267776, 'id': 'partition-1', 'type': 'partition'})
get_path_to_storage_volume for volume disk-sda({'ptable': 'gpt', 'path': '/dev/sda', 'wipe': 'superblock-recursive', 'preserve': False, 'name': '', 'grub_device': False, 'id': 'disk-sda', 'type': 'disk'})
/dev/sda is multipath device member? False
found candidate disks [{'/dev/sda'}]
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.080
devsync happy - path /dev/sda now exists
return volume path /dev/sda
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.161
devsync happy - path /dev/sda now exists
return volume path /dev/sda2
mkfs /dev/sda2 info: {'fstype': 'ext4', 'volume': 'partition-1', 'preserve': False, 'id': 'format-1', 'type': 'format'}
Running command ['lsblk', '--noheadings', '--bytes', '--pairs', '--output=ALIGNMENT,DISC-ALN,DISC-GRAN,DISC-MAX,DISC-ZERO,FSTYPE,GROUP,KNAME,LABEL,LOG-SEC,MAJ:MIN,MIN-IO,MODE,MODEL,MOUNTPOINT,NAME,OPT-IO,OWNER,PHY-SEC,RM,RO,ROTA,RQ-SIZE,SIZE,STATE,TYPE,UUID', '/dev/sda2'] with allowed return codes [0] (capture=True)
get_blockdev_sector_size: info:
{
 "sda2": {
  "ALIGNMENT": "0",
  "DISC-ALN": "0",
  "DISC-GRAN": "512",
  "DISC-MAX": "0",
  "DISC-ZERO": "0",
  "FSTYPE": "",
  "GROUP": "disk",
  "KNAME": "sda2",
  "LABEL": "",
  "LOG-SEC": "512",
  "MAJ:MIN": "8:2",
  "MIN-IO": "512",
  "MODE": "brw-rw----",
  "MODEL": "",
  "MOUNTPOINT": "",
  "NAME": "sda2",
  "OPT-IO": "0",
  "OWNER": "root",
  "PHY-SEC": "512",
  "RM": "0",
  "RO": "0",
  "ROTA": "1",
  "RQ-SIZE": "1024",
  "SIZE": "106244866048",
  "STATE": "",
  "TYPE": "part",
  "UUID": "",
  "device_path": "/dev/sda2"
 }
}
get_blockdev_sector_size: (log=512, phys=512)
Running command ['mkfs.ext4', '-F', '-U', '4de5bccc-8c89-484a-a7e8-4e006b749508', '/dev/sda2'] with allowed return codes [0] (capture=True)
Formated device type: partition
finish: cmd-install/stage-partitioning/builtin/cmd-block-meta: SUCCESS: configuring format: format-1
start: cmd-install/stage-partitioning/builtin/cmd-block-meta: configuring mount: mount-1
get_path_to_storage_volume for volume partition-1({'device': 'disk-sda', 'size': 106244866048, 'wipe': 'superblock', 'number': 2, 'preserve': False, 'offset': 1128267776, 'id': 'partition-1', 'type': 'partition'})
get_path_to_storage_volume for volume disk-sda({'ptable': 'gpt', 'path': '/dev/sda', 'wipe': 'superblock-recursive', 'preserve': False, 'name': '', 'grub_device': False, 'id': 'disk-sda', 'type': 'disk'})
/dev/sda is multipath device member? False
found candidate disks [{'/dev/sda'}]
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.162
devsync happy - path /dev/sda now exists
return volume path /dev/sda
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.163
devsync happy - path /dev/sda now exists
return volume path /dev/sda2
volume_path=/dev/sda2 found slaves: ['sda2']
kname_is_iscsi: no iscsi disk found for kname sda2
kname_is_iscsi: no iscsi disk found for kname sda2
Running command ['mount', '-t', 'ext4', '-o', 'defaults', '/dev/sda2', '/target/'] with allowed return codes [0] (capture=True)
Running command ['udevadm', 'info', '--query=property', '--export', '/dev/sda2'] with allowed return codes [0] (capture=True)
Running command ['lsblk', '--noheadings', '--bytes', '--pairs', '--output=ALIGNMENT,DISC-ALN,DISC-GRAN,DISC-MAX,DISC-ZERO,FSTYPE,GROUP,KNAME,LABEL,LOG-SEC,MAJ:MIN,MIN-IO,MODE,MODEL,MOUNTPOINT,NAME,OPT-IO,OWNER,PHY-SEC,RM,RO,ROTA,RQ-SIZE,SIZE,STATE,TYPE,UUID', '/dev/sda2'] with allowed return codes [0] (capture=True)
volspec: path=/dev/sda2 type=part
info[DEVLINKS] = ['/dev/disk/by-path/platform-238030000.pcie-pci-0000:00:03.0-scsi-0:0:0:0-part/by-partnum/2', '/dev/disk/by-path/platform-238030000.pcie-pci-0000:00:03.0-scsi-0:0:0:0-part/by-uuid/4de5bccc-8c89-484a-a7e8-4e006b749508', '/dev/disk/by-uuid/4de5bccc-8c89-484a-a7e8-4e006b749508', '/dev/disk/by-partuuid/6abbe0d5-bda4-4f6c-bf20-d828ce8423ee', '/dev/disk/by-path/platform-238030000.pcie-pci-0000:00:03.0-scsi-0:0:0:0-part2', '/dev/disk/by-diskseq/9-part2', '/dev/disk/by-path/platform-238030000.pcie-pci-0000:00:03.0-scsi-0:0:0:0-part/by-partuuid/6abbe0d5-bda4-4f6c-bf20-d828ce8423ee']
finish: cmd-install/stage-partitioning/builtin/cmd-block-meta: SUCCESS: configuring mount: mount-1
start: cmd-install/stage-partitioning/builtin/cmd-block-meta: configuring mount: mount-0
get_path_to_storage_volume for volume partition-0({'device': 'disk-sda', 'size': 1127219200, 'wipe': 'superblock', 'flag': 'boot', 'number': 1, 'preserve': False, 'grub_device': True, 'offset': 1048576, 'id': 'partition-0', 'type': 'partition'})
get_path_to_storage_volume for volume disk-sda({'ptable': 'gpt', 'path': '/dev/sda', 'wipe': 'superblock-recursive', 'preserve': False, 'name': '', 'grub_device': False, 'id': 'disk-sda', 'type': 'disk'})
/dev/sda is multipath device member? False
found candidate disks [{'/dev/sda'}]
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.067
devsync happy - path /dev/sda now exists
return volume path /dev/sda
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.059
devsync happy - path /dev/sda now exists
return volume path /dev/sda1
volume_path=/dev/sda1 found slaves: ['sda1']
kname_is_iscsi: no iscsi disk found for kname sda1
kname_is_iscsi: no iscsi disk found for kname sda1
Running command ['mount', '-t', 'vfat', '-o', 'defaults', '/dev/sda1', '/target/boot/efi'] with allowed return codes [0] (capture=True)
Running command ['udevadm', 'info', '--query=property', '--export', '/dev/sda1'] with allowed return codes [0] (capture=True)
Running command ['lsblk', '--noheadings', '--bytes', '--pairs', '--output=ALIGNMENT,DISC-ALN,DISC-GRAN,DISC-MAX,DISC-ZERO,FSTYPE,GROUP,KNAME,LABEL,LOG-SEC,MAJ:MIN,MIN-IO,MODE,MODEL,MOUNTPOINT,NAME,OPT-IO,OWNER,PHY-SEC,RM,RO,ROTA,RQ-SIZE,SIZE,STATE,TYPE,UUID', '/dev/sda1'] with allowed return codes [0] (capture=True)
volspec: path=/dev/sda1 type=part
info[DEVLINKS] = ['/dev/disk/by-partuuid/1740dee8-4850-4795-b5af-666065e8e4d7', '/dev/disk/by-path/platform-238030000.pcie-pci-0000:00:03.0-scsi-0:0:0:0-part/by-partuuid/1740dee8-4850-4795-b5af-666065e8e4d7', '/dev/disk/by-path/platform-238030000.pcie-pci-0000:00:03.0-scsi-0:0:0:0-part/by-uuid/6299-0478', '/dev/disk/by-path/platform-238030000.pcie-pci-0000:00:03.0-scsi-0:0:0:0-part1', '/dev/disk/by-path/platform-238030000.pcie-pci-0000:00:03.0-scsi-0:0:0:0-part/by-partnum/1', '/dev/disk/by-diskseq/9-part1', '/dev/disk/by-uuid/6299-0478']
finish: cmd-install/stage-partitioning/builtin/cmd-block-meta: SUCCESS: configuring mount: mount-0
TIMED BLOCK_META: 6.072
finish: cmd-install/stage-partitioning/builtin/cmd-block-meta: SUCCESS: curtin command block-meta
curtin: Installation finished.

---- [[ subiquity step extract ]] ----
curtin: Installation started. (24.0.0-100-gaa2f5dd03)
start: cmd-install/stage-extract/builtin/cmd-extract: curtin command extract
Installing sources: [{'type': 'tgz', 'uri': 'cp:///tmp/tmp4cj56x0p/mount'}] to target at /target
start: cmd-install/stage-extract/builtin/cmd-extract: acquiring and extracting image from cp:///tmp/tmp4cj56x0p/mount
Setting up Trivial Source for stack /tmp/tmp4cj56x0p/mount
Running command ['rsync', '-aXHAS', '--one-file-system', '/tmp/tmp4cj56x0p/mount/', '.'] with allowed return codes [0] (capture=False)
finish: cmd-install/stage-extract/builtin/cmd-extract: SUCCESS: acquiring and extracting image from cp:///tmp/tmp4cj56x0p/mount
Applying write_files from config.
finish: cmd-install/stage-extract/builtin/cmd-extract: SUCCESS: curtin command extract
curtin: Installation finished.

---- [[ subiquity step curthooks ]] ----
curtin: Installation started. (24.0.0-100-gaa2f5dd03)
start: cmd-install/stage-curthooks/builtin/cmd-curthooks: curtin command curthooks
Running curtin builtin curthooks
Configuring target system for distro: ubuntu osfamily: debian
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/writing-apt-config: configuring apt configuring apt
No apt config provided, skipping
Running command ['mount', '--bind', '/dev', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/proc', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/run', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys/firmware/efi/efivars', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/target/usr/bin/true', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Diverting original update-initramfs in target.
Running command ['unshare', '--help'] with allowed return codes [0] (capture=True)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'dpkg-divert', '--add', '--rename', '--divert', '/usr/sbin/update-initramfs.curtin-disabled', '/usr/sbin/update-initramfs'] with allowed return codes [0] (capture=False)
Adding 'local diversion of /usr/sbin/update-initramfs to /usr/sbin/update-initramfs.curtin-disabled'
Diverting original flash-kernel in target.
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'dpkg-divert', '--add', '--rename', '--divert', '/usr/sbin/flash-kernel.curtin-disabled', '/usr/sbin/flash-kernel'] with allowed return codes [0] (capture=False)
Adding 'local diversion of /usr/sbin/flash-kernel to /usr/sbin/flash-kernel.curtin-disabled'
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED subp(['udevadm', 'settle']): 0.010
Running command ['mount', '--make-private', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/dev'] with allowed return codes [0] (capture=False)
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/writing-apt-config: SUCCESS: configuring apt configuring apt
Checking if target_proc (/target/proc) is a mount
It's not, using normal behavior
Running command ['unshare', '--fork', '--pid', '--', 'chroot', '/target', 'lsb_release', '--all'] with allowed return codes [0] (capture=True)
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/installing-missing-packages: installing missing packages
Checking if target_proc (/target/proc) is a mount
It's not, using normal behavior
Running command ['unshare', '--fork', '--pid', '--', 'chroot', '/target', 'dpkg-query', '--list'] with allowed return codes [0] (capture=True)
Curtin config dependencies requires additional packages: ['e2fsprogs']
Running command ['dpkg', '--print-architecture'] with allowed return codes [0] (capture=True)
Running command ['apt-cache', 'pkgnames'] with allowed return codes [0] (capture=True)
Running command ['apt-cache', 'pkgnames'] with allowed return codes [0] (capture=True)
Skipping install of {'grub-efi-arm64', 'grub-efi-arm64-signed', 'efibootmgr', 'bridge-utils', 'vlan', 'ifenslave', 'shim-signed'}.  Not needed on netplan system.
start: cmd-install/stage-curthooks/builtin/cmd-curthooks: Installing packages on target system: ['efibootmgr', 'grub-efi-arm64', 'grub-efi-arm64-signed', 'shim-signed']
Updating apt sources in /target
Running command ['mount', '--bind', '/dev', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/proc', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/run', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys/firmware/efi/efivars', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/target/usr/bin/true', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'apt-get', '--quiet', '--option=Acquire::Languages=none', 'update'] with allowed return codes [0] (capture=False)
Ign:1 file:/cdrom plucky InRelease
Get:2 file:/cdrom plucky Release [648 B]
Get:2 file:/cdrom plucky Release [648 B]
Hit:4 http://ports.ubuntu.com/ubuntu-ports plucky InRelease
Hit:5 http://ports.ubuntu.com/ubuntu-ports plucky-updates InRelease
Hit:6 http://ports.ubuntu.com/ubuntu-ports plucky-backports InRelease
Hit:7 http://ports.ubuntu.com/ubuntu-ports plucky-security InRelease
Reading package lists...
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED subp(['udevadm', 'settle']): 0.006
Running command ['mount', '--make-private', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/dev', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/proc', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/run', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys/firmware/efi/efivars', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/target/usr/bin/true', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'apt-get', '--quiet', '--assume-yes', '--option=Dpkg::options::=--force-unsafe-io', '--option=Dpkg::Options::=--force-confold', 'install', '--download-only', 'efibootmgr', 'grub-efi-arm64', 'grub-efi-arm64-signed', 'shim-signed'] with allowed return codes [0] (capture=False)
Reading package lists...
Building dependency tree...
Reading state information...
Solving dependencies...
The following additional packages will be installed:
  grub-common grub-efi-arm64-bin grub-efi-arm64-unsigned grub2-common
  libefiboot1t64 libefivar1t64 mokutil os-prober
Suggested packages:
  multiboot-doc mtools xorriso desktop-base
The following NEW packages will be installed:
  efibootmgr grub-common grub-efi-arm64 grub-efi-arm64-bin
  grub-efi-arm64-signed grub-efi-arm64-unsigned grub2-common libefiboot1t64
  libefivar1t64 mokutil os-prober shim-signed
0 upgraded, 12 newly installed, 0 to remove and 58 not upgraded.
Need to get 0 B/7,091 kB of archives.
After this operation, 41.3 MB of additional disk space will be used.
Get:1 file:/cdrom plucky/main arm64 libefivar1t64 arm64 38-3.1build1 [55.1 kB]
Get:2 file:/cdrom plucky/main arm64 libefiboot1t64 arm64 38-3.1build1 [40.5 kB]
Get:3 file:/cdrom plucky/main arm64 efibootmgr arm64 18-2 [31.6 kB]
Get:4 file:/cdrom plucky/main arm64 grub-common arm64 2.12-5ubuntu11 [2,194 kB]
Get:5 file:/cdrom plucky/main arm64 grub-efi-arm64-unsigned arm64 2.12-5ubuntu11 [1,363 kB]
Get:6 file:/cdrom plucky/main arm64 grub-efi-arm64-bin arm64 2.12-5ubuntu11 [674 kB]
Get:7 file:/cdrom plucky/main arm64 grub2-common arm64 2.12-5ubuntu11 [678 kB]
Get:8 file:/cdrom plucky/main arm64 grub-efi-arm64 arm64 2.12-5ubuntu11 [52.7 kB]
Get:9 file:/cdrom plucky/main arm64 grub-efi-arm64-signed arm64 1.212+2.12-5ubuntu11 [1,397 kB]
Get:10 file:/cdrom plucky/main arm64 mokutil arm64 0.6.0-2build3 [27.2 kB]
Get:11 file:/cdrom plucky/main arm64 os-prober arm64 1.83ubuntu2 [15.9 kB]
Get:12 file:/cdrom plucky/main arm64 shim-signed arm64 1.59+15.8-0ubuntu2 [563 kB]
Download complete and in download only mode
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'apt-get', '--quiet', '--assume-yes', '--option=Dpkg::options::=--force-unsafe-io', '--option=Dpkg::Options::=--force-confold', 'install', 'efibootmgr', 'grub-efi-arm64', 'grub-efi-arm64-signed', 'shim-signed'] with allowed return codes [0] (capture=False)
Reading package lists...
Building dependency tree...
Reading state information...
Solving dependencies...
The following additional packages will be installed:
  grub-common grub-efi-arm64-bin grub-efi-arm64-unsigned grub2-common
  libefiboot1t64 libefivar1t64 mokutil os-prober
Suggested packages:
  multiboot-doc mtools xorriso desktop-base
The following NEW packages will be installed:
  efibootmgr grub-common grub-efi-arm64 grub-efi-arm64-bin
  grub-efi-arm64-signed grub-efi-arm64-unsigned grub2-common libefiboot1t64
  libefivar1t64 mokutil os-prober shim-signed
0 upgraded, 12 newly installed, 0 to remove and 58 not upgraded.
Need to get 0 B/7,091 kB of archives.
After this operation, 41.3 MB of additional disk space will be used.
Get:1 file:/cdrom plucky/main arm64 libefivar1t64 arm64 38-3.1build1 [55.1 kB]
Get:2 file:/cdrom plucky/main arm64 libefiboot1t64 arm64 38-3.1build1 [40.5 kB]
Get:3 file:/cdrom plucky/main arm64 efibootmgr arm64 18-2 [31.6 kB]
Get:4 file:/cdrom plucky/main arm64 grub-common arm64 2.12-5ubuntu11 [2,194 kB]
Get:5 file:/cdrom plucky/main arm64 grub-efi-arm64-unsigned arm64 2.12-5ubuntu11 [1,363 kB]
Get:6 file:/cdrom plucky/main arm64 grub-efi-arm64-bin arm64 2.12-5ubuntu11 [674 kB]
Get:7 file:/cdrom plucky/main arm64 grub2-common arm64 2.12-5ubuntu11 [678 kB]
Get:8 file:/cdrom plucky/main arm64 grub-efi-arm64 arm64 2.12-5ubuntu11 [52.7 kB]
Get:9 file:/cdrom plucky/main arm64 grub-efi-arm64-signed arm64 1.212+2.12-5ubuntu11 [1,397 kB]
Get:10 file:/cdrom plucky/main arm64 mokutil arm64 0.6.0-2build3 [27.2 kB]
Get:11 file:/cdrom plucky/main arm64 os-prober arm64 1.83ubuntu2 [15.9 kB]
Get:12 file:/cdrom plucky/main arm64 shim-signed arm64 1.59+15.8-0ubuntu2 [563 kB]
Preconfiguring packages ...
E: Can not write log (Is /dev/pts mounted?) - posix_openpt (19: No such device)
Selecting previously unselected package libefivar1t64:arm64.
(Reading database ... 145056 files and directories currently installed.)
Preparing to unpack .../00-libefivar1t64_38-3.1build1_arm64.deb ...
Unpacking libefivar1t64:arm64 (38-3.1build1) ...
Selecting previously unselected package libefiboot1t64:arm64.
Preparing to unpack .../01-libefiboot1t64_38-3.1build1_arm64.deb ...
Unpacking libefiboot1t64:arm64 (38-3.1build1) ...
Selecting previously unselected package efibootmgr.
Preparing to unpack .../02-efibootmgr_18-2_arm64.deb ...
Unpacking efibootmgr (18-2) ...
Selecting previously unselected package grub-common.
Preparing to unpack .../03-grub-common_2.12-5ubuntu11_arm64.deb ...
Unpacking grub-common (2.12-5ubuntu11) ...
Selecting previously unselected package grub-efi-arm64-unsigned.
Preparing to unpack .../04-grub-efi-arm64-unsigned_2.12-5ubuntu11_arm64.deb ...
Unpacking grub-efi-arm64-unsigned (2.12-5ubuntu11) ...
Selecting previously unselected package grub-efi-arm64-bin.
Preparing to unpack .../05-grub-efi-arm64-bin_2.12-5ubuntu11_arm64.deb ...
Unpacking grub-efi-arm64-bin (2.12-5ubuntu11) ...
Selecting previously unselected package grub2-common.
Preparing to unpack .../06-grub2-common_2.12-5ubuntu11_arm64.deb ...
Unpacking grub2-common (2.12-5ubuntu11) ...
Selecting previously unselected package grub-efi-arm64.
Preparing to unpack .../07-grub-efi-arm64_2.12-5ubuntu11_arm64.deb ...
Unpacking grub-efi-arm64 (2.12-5ubuntu11) ...
Selecting previously unselected package grub-efi-arm64-signed.
Preparing to unpack .../08-grub-efi-arm64-signed_1.212+2.12-5ubuntu11_arm64.deb ...
Unpacking grub-efi-arm64-signed (1.212+2.12-5ubuntu11) ...
Selecting previously unselected package mokutil.
Preparing to unpack .../09-mokutil_0.6.0-2build3_arm64.deb ...
Unpacking mokutil (0.6.0-2build3) ...
Selecting previously unselected package os-prober.
Preparing to unpack .../10-os-prober_1.83ubuntu2_arm64.deb ...
Unpacking os-prober (1.83ubuntu2) ...
Selecting previously unselected package shim-signed.
Preparing to unpack .../11-shim-signed_1.59+15.8-0ubuntu2_arm64.deb ...
Unpacking shim-signed (1.59+15.8-0ubuntu2) ...
Setting up libefivar1t64:arm64 (38-3.1build1) ...
Setting up libefiboot1t64:arm64 (38-3.1build1) ...
Setting up efibootmgr (18-2) ...
Setting up mokutil (0.6.0-2build3) ...
Setting up grub-common (2.12-5ubuntu11) ...
update-rc.d: warning: start and stop actions are no longer supported; falling back to defaults
Running in chroot, ignoring command 'daemon-reload'
Running in chroot, ignoring command 'is-active'
invoke-rc.d: policy-rc.d denied execution of start.
Created symlink '/etc/systemd/system/multi-user.target.wants/grub-common.service' → '/usr/lib/systemd/system/grub-common.service'.
Created symlink '/etc/systemd/system/suspend.target.wants/grub-common.service' → '/usr/lib/systemd/system/grub-common.service'.
Created symlink '/etc/systemd/system/hibernate.target.wants/grub-common.service' → '/usr/lib/systemd/system/grub-common.service'.
Created symlink '/etc/systemd/system/hybrid-sleep.target.wants/grub-common.service' → '/usr/lib/systemd/system/grub-common.service'.
Created symlink '/etc/systemd/system/suspend-then-hibernate.target.wants/grub-common.service' → '/usr/lib/systemd/system/grub-common.service'.
Created symlink '/etc/systemd/system/multi-user.target.wants/grub-initrd-fallback.service' → '/usr/lib/systemd/system/grub-initrd-fallback.service'.
Created symlink '/etc/systemd/system/rescue.target.wants/grub-initrd-fallback.service' → '/usr/lib/systemd/system/grub-initrd-fallback.service'.
Created symlink '/etc/systemd/system/emergency.target.wants/grub-initrd-fallback.service' → '/usr/lib/systemd/system/grub-initrd-fallback.service'.
Created symlink '/etc/systemd/system/sleep.target.wants/grub-initrd-fallback.service' → '/usr/lib/systemd/system/grub-initrd-fallback.service'.
Running in chroot, ignoring command 'daemon-reload'
/usr/sbin/policy-rc.d returned 101, not running 'start grub-common.service grub-initrd-fallback.service'
Setting up os-prober (1.83ubuntu2) ...
Setting up grub2-common (2.12-5ubuntu11) ...
Setting up grub-efi-arm64-unsigned (2.12-5ubuntu11) ...
Setting up grub-efi-arm64-bin (2.12-5ubuntu11) ...
Setting up grub-efi-arm64 (2.12-5ubuntu11) ...
Creating config file /etc/default/grub with new version
Setting up grub-efi-arm64-signed (1.212+2.12-5ubuntu11) ...
Setting up shim-signed (1.59+15.8-0ubuntu2) ...
update-alternatives: error: no alternatives for shimaa64.efi.signed
update-alternatives: using /usr/lib/shim/shimaa64.nx.efi.signed.latest to provide /usr/lib/shim/shimaa64.efi.signed (shimaa64.efi.signed) in auto mode
update-alternatives: using /usr/lib/shim/shimaa64.efi.signed.latest to provide /usr/lib/shim/shimaa64.efi.signed (shimaa64.efi.signed) in auto mode
Processing triggers for libc-bin (2.41-6ubuntu1) ...
Processing triggers for man-db (2.13.0-1) ...
Processing triggers for install-info (7.1.1-1) ...
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED subp(['udevadm', 'settle']): 0.007
Running command ['mount', '--make-private', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/dev', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/proc', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/run', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys/firmware/efi/efivars', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/target/usr/bin/true', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'apt-get', 'clean'] with allowed return codes [0] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED subp(['udevadm', 'settle']): 0.009
Running command ['mount', '--make-private', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/dev'] with allowed return codes [0] (capture=False)
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks: SUCCESS: Installing packages on target system: ['efibootmgr', 'grub-efi-arm64', 'grub-efi-arm64-signed', 'shim-signed']
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/installing-missing-packages: SUCCESS: installing missing packages
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/configuring-iscsi-service: configuring iscsi service
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/configuring-iscsi-service: SUCCESS: configuring iscsi service
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/configuring-mdadm-service: configuring raid (mdadm) service
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/configuring-mdadm-service: SUCCESS: configuring raid (mdadm) service
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/configuring-nvme-over-tcp: configuring NVMe over TCP
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/configuring-nvme-over-tcp: SUCCESS: configuring NVMe over TCP
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/installing-kernel: installing kernel
Checking if target_proc (/target/proc) is a mount
It's not, using normal behavior
Running command ['unshare', '--fork', '--pid', '--', 'chroot', '/target', 'lsb_release', '--all'] with allowed return codes [0] (capture=True)
Checking if target_proc (/target/proc) is a mount
It's not, using normal behavior
Running command ['unshare', '--fork', '--pid', '--', 'chroot', '/target', 'dpkg-query', '--show', '--showformat=${Package}/${db:Status-Abbrev}/${Provides}\n'] with allowed return codes [0] (capture=True)
Running command ['dpkg', '--print-architecture'] with allowed return codes [0] (capture=True)
Updating apt sources in /target
Running command ['mount', '--bind', '/dev', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/proc', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/run', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys/firmware/efi/efivars', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/target/usr/bin/true', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'apt-get', '--quiet', '--option=Acquire::Languages=none', 'update'] with allowed return codes [0] (capture=False)
Ign:1 file:/cdrom plucky InRelease
Get:2 file:/cdrom plucky Release [648 B]
Get:2 file:/cdrom plucky Release [648 B]
Hit:4 http://ports.ubuntu.com/ubuntu-ports plucky InRelease
Hit:5 http://ports.ubuntu.com/ubuntu-ports plucky-updates InRelease
Hit:6 http://ports.ubuntu.com/ubuntu-ports plucky-backports InRelease
Hit:7 http://ports.ubuntu.com/ubuntu-ports plucky-security InRelease
Reading package lists...
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED subp(['udevadm', 'settle']): 0.006
Running command ['mount', '--make-private', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/dev', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/proc', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/run', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys/firmware/efi/efivars', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/target/usr/bin/true', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'apt-get', '--quiet', '--assume-yes', '--option=Dpkg::options::=--force-unsafe-io', '--option=Dpkg::Options::=--force-confold', 'install', '--download-only', 'linux-generic-hwe-24.04'] with allowed return codes [0] (capture=False)
Reading package lists...
Building dependency tree...
Reading state information...
linux-generic-hwe-24.04 is already the newest version (6.14.0-15.15).
Solving dependencies...
0 upgraded, 0 newly installed, 0 to remove and 58 not upgraded.
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'apt-get', '--quiet', '--assume-yes', '--option=Dpkg::options::=--force-unsafe-io', '--option=Dpkg::Options::=--force-confold', 'install', 'linux-generic-hwe-24.04'] with allowed return codes [0] (capture=False)
Reading package lists...
Building dependency tree...
Reading state information...
linux-generic-hwe-24.04 is already the newest version (6.14.0-15.15).
Solving dependencies...
0 upgraded, 0 newly installed, 0 to remove and 58 not upgraded.
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED subp(['udevadm', 'settle']): 0.009
Running command ['mount', '--make-private', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/dev', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/proc', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/run', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys/firmware/efi/efivars', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/target/usr/bin/true', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'apt-get', 'clean'] with allowed return codes [0] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED subp(['udevadm', 'settle']): 0.006
Running command ['mount', '--make-private', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/dev'] with allowed return codes [0] (capture=False)
ensure_one_kernel: kernels before install {'linux-image-6.14.0-15-generic'}
Checking if target_proc (/target/proc) is a mount
It's not, using normal behavior
Running command ['unshare', '--fork', '--pid', '--', 'chroot', '/target', 'dpkg-query', '--show', '--showformat=${Package}/${db:Status-Abbrev}/${Provides}\n'] with allowed return codes [0] (capture=True)
ensure_one_kernel: kernels after install {'linux-image-6.14.0-15-generic'}
No kernels to remove - kernel to install was already installed
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/installing-kernel: SUCCESS: installing kernel
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/setting-up-swap: setting up swap
swap suggestion analysis: available: 91G maxsize: 8G memsize: 7G size before decision: 4G suggested size: 4G reason: lesser of formula or maxsize
Running command ['findmnt', '--noheading', '--target', '/target/', '-o', 'FSTYPE'] with allowed return codes [0] (capture=True)
Running command ['sh', '-c', 'rm -f "$1" && umask 0066 && truncate -s 0 "$1" && { chattr +C "$1" || true; } && fallocate -l "${2}M" "$1" && mkswap "$1" || { r=$?; rm -f "$1"; exit $r; }', 'setup_swap', '/target//swap.img', '4096'] with allowed return codes [0] (capture=False)
chattr: Operation not supported while setting flags on /target//swap.img
Setting up swapspace version 1, size = 4 GiB (4294963200 bytes)
no label, UUID=75bd9f10-726d-421d-9441-5f2eb2ee41c7
creating swapfile '/swap.img' of 4096MB took 0.054 seconds
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/setting-up-swap: SUCCESS: setting up swap
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/apply-networking-config: apply networking config
copying interfaces
no interfaces file to copy!
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/apply-networking-config: SUCCESS: apply networking config
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/writing-etc-fstab: writing etc/fstab
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/writing-etc-fstab: SUCCESS: writing etc/fstab
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/configuring-multipath: configuring multipath
Multipath detection found: None
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/configuring-multipath: SUCCESS: configuring multipath
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/system-upgrade: updating packages on target system
system_upgrade disabled by config.
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/system-upgrade: SUCCESS: updating packages on target system
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/pollinate-user-agent: configuring pollinate user-agent on target
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/pollinate-user-agent: SUCCESS: configuring pollinate user-agent on target
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/configuring-kernel-crash-dumps: configuring kernel crash dumps settings
kernel-crash-dumps enablement script found.
Running conditional enablement script...
Running command ['mount', '--bind', '/dev', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/proc', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/run', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys/firmware/efi/efivars', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/target/usr/bin/true', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', '/usr/share/kdump-tools/kdump_set_default'] with allowed return codes [0] (capture=False)
KDump Default Enablement Criteria: CPU Architectures: x86_64 aarch64 s390x, CPU Threads >= 4, RAM/Swap: 6-2048 GB, Free Space in /var >= 5x RAM/Swap (35 GB)
Hardware Found: CPU Architecture: aarch64, CPU Threads: 8, Memory: 7 GB, Free space in /var:   83 GB
KDump will be enabled.
Subroutine Debconf::FrontEnd::Editor::SUPER::screenwidth redefined at /usr/share/perl5/Debconf/Base.pm line 32, <GEN1> line 3.
Subroutine Debconf::FrontEnd::Editor::SUPER::screenwidth redefined at /usr/share/perl5/Debconf/Base.pm line 32, <GEN1> line 3.
Subroutine Debconf::Element::Editor::Boolean::SUPER::value redefined at /usr/share/perl5/Debconf/Base.pm line 32.
Running in chroot, ignoring command 'daemon-reload'
Running in chroot, ignoring command 'is-active'
invoke-rc.d: policy-rc.d denied execution of restart.
Running in chroot, ignoring command 'daemon-reload'
/usr/sbin/policy-rc.d returned 101, not running 'restart kdump-tools.service'
Running in chroot, ignoring command 'daemon-reload'
/usr/sbin/policy-rc.d returned 101, not running 'restart kdump-tools-dump.service'
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED subp(['udevadm', 'settle']): 0.007
Running command ['mount', '--make-private', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/dev'] with allowed return codes [0] (capture=False)
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/configuring-kernel-crash-dumps: SUCCESS: configuring kernel crash dumps settings
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/updating-initramfs-configuration: updating initramfs configuration
Running command ['mount', '--bind', '/dev', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/proc', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/run', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys/firmware/efi/efivars', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/target/usr/bin/true', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'dpkg-divert', '--list'] with allowed return codes [0] (capture=True)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED subp(['udevadm', 'settle']): 0.011
Running command ['mount', '--make-private', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/dev', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/proc', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/run', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys/firmware/efi/efivars', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/target/usr/bin/true', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Restoring update-initramfs in target for initrd updates.
del_file: removed /target/usr/sbin/update-initramfs
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'dpkg-divert', '--rename', '--remove', '/usr/sbin/update-initramfs'] with allowed return codes [0] (capture=False)
Removing 'local diversion of /usr/sbin/update-initramfs to /usr/sbin/update-initramfs.curtin-disabled'
Restoring flash-kernel in target for initrd updates.
del_file: removed /target/usr/sbin/flash-kernel
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'dpkg-divert', '--rename', '--remove', '/usr/sbin/flash-kernel'] with allowed return codes [0] (capture=False)
Removing 'local diversion of /usr/sbin/flash-kernel to /usr/sbin/flash-kernel.curtin-disabled'
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED subp(['udevadm', 'settle']): 0.008
Running command ['mount', '--make-private', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/dev', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/proc', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/run', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys/firmware/efi/efivars', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/target/usr/bin/true', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'dpkg-divert', '--list'] with allowed return codes [0] (capture=True)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED subp(['udevadm', 'settle']): 0.004
Running command ['mount', '--make-private', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/dev', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/proc', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/run', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys/firmware/efi/efivars', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/target/usr/bin/true', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'update-initramfs', '-u', '-k', '6.14.0-15-generic'] with allowed return codes [0] (capture=False)
update-initramfs: Generating /boot/initrd.img-6.14.0-15-generic
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED subp(['udevadm', 'settle']): 0.006
Running command ['mount', '--make-private', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/dev'] with allowed return codes [0] (capture=False)
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/updating-initramfs-configuration: SUCCESS: updating initramfs configuration
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/kernel-postinstall: running kernel postinstall hooks
Running command ['mount', '--bind', '/dev', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/proc', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/run', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys/firmware/efi/efivars', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/target/usr/bin/true', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'dpkg-query', '--show', '--showformat=${Package}/${db:Status-Abbrev}/${Provides}\n'] with allowed return codes [0] (capture=True)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'dpkg-reconfigure', '--frontend=noninteractive', 'linux-image-6.14.0-15-generic'] with allowed return codes [0] (capture=False)
Processing triggers for linux-image-6.14.0-15-generic (6.14.0-15.15) ...
/etc/kernel/postinst.d/initramfs-tools:
update-initramfs: Generating /boot/initrd.img-6.14.0-15-generic
/etc/kernel/postinst.d/kdump-tools:
W: kdump-tools: Executing in a chroot, skipping initramfs generation.
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED subp(['udevadm', 'settle']): 0.008
Running command ['mount', '--make-private', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/dev'] with allowed return codes [0] (capture=False)
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/kernel-postinstall: SUCCESS: running kernel postinstall hooks
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/configuring-bootloader: configuring target system bootloader
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/install-grub: installing grub to target devices
setup grub on target /target
Found primary UEFI ESP: partition-0
Found UEFI ESP(s) for grub install: ['partition-0']
get_path_to_storage_volume for volume partition-0({'device': 'disk-sda', 'size': 1127219200, 'wipe': 'superblock', 'flag': 'boot', 'number': 1, 'preserve': False, 'grub_device': True, 'offset': 1048576, 'path': '/dev/sda1', 'id': 'partition-0', 'type': 'partition'})
get_path_to_storage_volume for volume disk-sda({'ptable': 'gpt', 'path': '/dev/sda', 'wipe': 'superblock-recursive', 'preserve': False, 'name': '', 'grub_device': False, 'id': 'disk-sda', 'type': 'disk'})
Running command ['udevadm', 'info', '--query=property', '--export', '/dev/sda'] with allowed return codes [0] (capture=True)
/dev/sda is multipath device member? False
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.071
devsync happy - path /dev/sda now exists
return volume path /dev/sda
Running command ['partprobe', '/dev/sda'] with allowed return codes [0, 1] (capture=False)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED udevadm_settle(): 0.044
devsync happy - path /dev/sda now exists
return volume path /dev/sda1
install_devices: ['/dev/sda1']
Generating grub debconf_selections for devices=['/dev/sda1'] uefi=True
Applying grub debconf_selections config:
{'debconf_selections': {'grub': 'grub-pc grub-efi/install_devices multiselect /dev/sda1'}}
Applying debconf selections
Checking if target_proc (/target/proc) is a mount
It's not, using normal behavior
Running command ['unshare', '--fork', '--pid', '--', 'chroot', '/target', 'debconf-set-selections'] with allowed return codes [0] (capture=True)
Checking if target_proc (/target/proc) is a mount
It's not, using normal behavior
Running command ['unshare', '--fork', '--pid', '--', 'chroot', '/target', 'dpkg-query', '--list'] with allowed return codes [0] (capture=True)
Running command ['mount', '--bind', '/dev', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/proc', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/run', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys/firmware/efi/efivars', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/target/usr/bin/true', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'efibootmgr', '-v'] with allowed return codes [0] (capture=True)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED subp(['udevadm', 'settle']): 0.004
Running command ['mount', '--make-private', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/dev', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/proc', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/run', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys/firmware/efi/efivars', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/target/usr/bin/true', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'efibootmgr', '-v'] with allowed return codes [0] (capture=True)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED subp(['udevadm', 'settle']): 0.004
Running command ['mount', '--make-private', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/dev'] with allowed return codes [0] (capture=False)
UEFI remove old olders efi state:
EFIBootState(current='0001', timeout='5 seconds', order=['0000', '0001', '0002', '0003'], entries={'0000': EFIBootEntry(name='UiApp', path='FvVol(64074afe-340a-4be6-94ba-91b5b4d0f71e)/FvFile(462caa21-7614-4503-836e-8ab6f4662331)'), '0001': EFIBootEntry(name='UEFI VBOX CD-ROM', path='PciRoot(0x0)/Pci(0x3,0x0)/SCSI(1,0){auto_created_boot_option}'), '0002': EFIBootEntry(name='UEFI VBOX HARDDISK', path='PciRoot(0x0)/Pci(0x3,0x0)/SCSI(0,0){auto_created_boot_option}'), '0003': EFIBootEntry(name='EFI Internal Shell', path='FvVol(64074afe-340a-4be6-94ba-91b5b4d0f71e)/FvFile(7c04a583-9e3e-4f1c-ad65-e05268d0b4d1)')})
installing grub to target=/target devices=['/dev/sda1'] [replace_defaults=True]
Checking if target_proc (/target/proc) is a mount
It's not, using normal behavior
Running command ['unshare', '--fork', '--pid', '--', 'chroot', '/target', 'dpkg', '--print-architecture'] with allowed return codes [0] (capture=True)
updated /target/etc/default/grub to set: GRUB_CMDLINE_LINUX_DEFAULT="quiet splash console=tty0"
Using grub install command: /usr/lib/grub/grub-multi-install
Grub install cmds:
[['efibootmgr', '-v'], ['dpkg-reconfigure', 'grub-efi-arm64'], ['update-grub'], ['/usr/lib/grub/grub-multi-install'], ['efibootmgr', '-v']]
Running command ['mount', '--bind', '/dev', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/proc', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/run', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys/firmware/efi/efivars', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/target/usr/bin/true', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'efibootmgr', '-v'] with allowed return codes [0] (capture=True)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'dpkg-reconfigure', 'grub-efi-arm64'] with allowed return codes [0] (capture=True)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'update-grub'] with allowed return codes [0] (capture=True)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', '/usr/lib/grub/grub-multi-install'] with allowed return codes [0] (capture=True)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'efibootmgr', '-v'] with allowed return codes [0] (capture=True)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED subp(['udevadm', 'settle']): 0.008
Running command ['mount', '--make-private', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/dev'] with allowed return codes [0] (capture=False)
Skipped reordering of UEFI boot methods.
Currently booted UEFI loader might no longer boot.
Running command ['mount', '--bind', '/dev', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/proc', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/run', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/sys/firmware/efi/efivars', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--bind', '/target/usr/bin/true', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Checking if target_proc (/target/proc) is a mount
It is, so unshare will use --mount-proc=/target/proc
Running command ['unshare', '--fork', '--pid', '--mount-proc=/target/proc', '--', 'chroot', '/target', 'efibootmgr', '-v'] with allowed return codes [0] (capture=True)
Running command ['udevadm', 'settle'] with allowed return codes [0] (capture=False)
TIMED subp(['udevadm', 'settle']): 0.007
Running command ['mount', '--make-private', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/usr/bin/ischroot'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys/firmware/efi/efivars'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/sys'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/run'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/proc'] with allowed return codes [0] (capture=False)
Running command ['mount', '--make-private', '/target/dev'] with allowed return codes [0] (capture=False)
Running command ['umount', '/target/dev'] with allowed return codes [0] (capture=False)
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/install-grub: SUCCESS: installing grub to target devices
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/configuring-bootloader: SUCCESS: configuring target system bootloader
start: cmd-install/stage-curthooks/builtin/cmd-curthooks/copy-cdrom-metadata: copying metadata from /cdrom
copying media-info into target
/cdrom/.disk/ubuntu_dist_channel not found, skipping
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks/copy-cdrom-metadata: SUCCESS: copying metadata from /cdrom
finish: cmd-install/stage-curthooks/builtin/cmd-curthooks: SUCCESS: curtin command curthooks
{'current': '0001', 'timeout': '5 seconds', 'order': '0000,0001,0002,0003'}
{'current': '0001', 'timeout': '5 seconds', 'order': '0000,0001,0002,0003'}
{'current': '0001', 'timeout': '5 seconds', 'order': '0004,0000,0001,0002,0003'}
curtin: Installation finished.
